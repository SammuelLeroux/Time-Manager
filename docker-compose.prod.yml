services:

  db:
    image: postgres:17
    container_name: time_manager_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8080:80"
    depends_on:
      - db

  app:
    image: rlelouch/time_manager_stg-11:elixir-latest
    container_name: time_manager_app
    working_dir: /time_manager
    ports:
      - "4000:4000"
    depends_on:
      db:
        condition: service_healthy
    command: ["sh", "-c", "mix deps.get && mix ecto.setup && mix assets.build && mix phx.server"]
    volumes:
      - ./time_manager:/time_manager

  vue:
    image: rlelouch/time_manager_stg-11:vue-latest
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
    depends_on:
      db:
        condition: service_healthy

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 86400 --cleanup

volumes:
  db_data: