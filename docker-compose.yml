services:
  db:
    image: postgres:17
    container_name: time_manager_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8080:80"
    depends_on:
      - db

  app:
    image: elixir:1.17
    container_name: time_manager_app
    working_dir: /time_manager
    command: >
      sh -c "
        mix setup &&
        mix phx.server
      "
    ports:
      - "4000:4000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./time_manager:/time_manager

  vue:
    build:
      context: ./frontend
      target: development
    volumes:
      - ./frontend:/app # Synchronisation du code source
      - /app/node_modules # Empêcher le montage de node_modules depuis l'hôte
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
    depends_on:
      db:
        condition: service_healthy

volumes:
  db_data: